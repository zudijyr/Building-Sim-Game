#!/usr/bin/env python

from sim.renderers.pyglet import PygletRenderer

from sim.geometry import *

from sim.models.tile_map import TileMap
from sim.models.tile_grid import TileGrid

from sim.models.terrain import Forest
from sim.models.terrain import Grass
from sim.models.terrain import Water

from sim.models.terrain_improvement import Road

from sim.models.unit.peasant import Peasant
from sim.models.unit.ship import Ship

from sim.models.building.fishing_hole import FishingHole
from sim.models.building.dock import Dock
from sim.models.building.cabbage_farm import CabbageFarm

from sim.models.resource import Wood

from sim.models.action import MoveToward, Harvest, ConstructBuilding

def main():
	tile_grid = TileGrid(Size(20, 20))
	tile_map = TileMap(tile_grid, tile_sz=Size(40, 40))

	### add terrain
	grass_area = Rectangle(Point(0, 1), Size(20,9))
	[ t.set_terrain(Grass) for t in tile_grid.get_tiles_in_rect(grass_area) ]
	water_area = Rectangle(Point(0,11), Size(20,9))
	[ t.set_terrain(Water) for t in tile_grid.get_tiles_in_rect(water_area) ]
	tile_grid.get_tile(Point(7, 7)).set_terrain(Forest)
	###

	### add improvements
	road_area = Rectangle(Point(5,3), Size(1,8))
	[ t.set_terrain_improvement(Road) for t in tile_grid.get_tiles_in_rect(road_area) ]
	###

	### add buildings
	building1 = FishingHole()
	building2 = Dock()
	building3 = Dock()
	building4 = Dock()
	tile_map.place_building_on_grid(building1, Point(5, 15))
	tile_map.place_building_on_grid(building2, Point(6, 10))
	tile_map.place_building_on_grid(building3, Point(6, 11))
	tile_map.place_building_on_grid(building4, Point(6, 12))
	###

	### add units
	unit1 = Peasant()
	tile_map.place_unit_on_grid(unit1, Point(4, 4))
	unit1.add_action(MoveToward(Point(7, 7), is_grid_pt=True))
	unit1.add_action(Harvest(Wood, quantity=10))
	unit1.add_action(MoveToward(Point(8, 7), is_grid_pt=True))
	unit1.add_action(ConstructBuilding(CabbageFarm))
	unit1.add_action(MoveToward(Point(8, 2), is_grid_pt=True))

	unit2 = Ship()
	tile_map.place_unit_on_grid(unit2, Point(8, 12))
	unit2.add_action(MoveToward(Point(5, 15), is_grid_pt=True))
	unit2.add_action(MoveToward(Point(5, 12), is_grid_pt=True))
	###

	renderer = PygletRenderer(tile_map, .05)
	renderer.run()

if __name__  == '__main__':
	main()
